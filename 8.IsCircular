#question 8
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next


def is_circular(head):
    if head is None:
        return False

    slow = head
    fast = head.next

    while fast is not None and fast.next is not None:
        if slow == fast:
            return True
        slow = slow.next
        fast = fast.next.next

    return False


# Example usage
# Example 1: Circular Linked List
head = ListNode(1)
head.next = ListNode(2)
head.next.next = ListNode(3)
head.next.next.next = head  # Circular link

print("Is circular:", is_circular(head))  # Output: True

# Example 2: Linear Linked List
head = ListNode(1)
head.next = ListNode(2)
head.next.next = ListNode(3)

print("Is circular:", is_circular(head))  # Output: False

#TC - O(N)----N - no. of nodes in ll
#SC - O(1)
